name: DITA to HTML Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install Additional Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils

    - name: Setup DITA-OT
      run: |
        mkdir -p tools
        curl -L https://github.com/dita-ot/dita-ot/releases/download/4.1.2/dita-ot-4.1.2.zip -o tools/dita-ot.zip
        unzip tools/dita-ot.zip -d tools/
        mv tools/dita-ot-4.1.2 tools/dita-ot
        
        # Verify DITA-OT installation
        echo "Verifying DITA-OT installation:"
        ls -la tools/dita-ot/bin/
        tools/dita-ot/bin/dita --version

    - name: Verify DITA Source
      run: |
        echo "Checking DITA source content..."
        if [ ! -d "dita-source" ]; then
          echo "dita-source directory not found! Creating directory and sample files."
          mkdir -p dita-source
          
          # Create a simple sample DITA map
          cat > dita-source/sample.ditamap << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE map PUBLIC "-//OASIS//DTD DITA Map//EN" "map.dtd">
        <map>
          <title>Automotive Information</title>
          <topicref href="sample-topic.dita" type="topic"/>
        </map>
        EOF
          
          # Create a simple sample DITA topic
          cat > dita-source/sample-topic.dita << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
        <topic id="sample">
          <title>Automotive Information</title>
          <body>
            <p>Welcome to our automotive documentation.</p>
            <section>
              <title>Automotive Theories</title>
              <p>Learn about automotive theories and concepts.</p>
            </section>
          </body>
        </topic>
        EOF
        else
          echo "dita-source directory found. Content:"
          ls -la dita-source/
          
          # Validate any DITA files
          find dita-source -name "*.dita*" -type f | while read file; do
            echo "Validating $file"
            xmllint --noout "$file" 2>/dev/null || echo "Warning: XML validation failed for $file"
          done
          
          # If no DITA files found, create sample files
          if [ $(find dita-source -name "*.dita*" -type f | wc -l) -eq 0 ]; then
            echo "No DITA files found. Creating sample files."
            cat > dita-source/sample.ditamap << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE map PUBLIC "-//OASIS//DTD DITA Map//EN" "map.dtd">
        <map>
          <title>Automotive Information</title>
          <topicref href="sample-topic.dita" type="topic"/>
        </map>
        EOF
            
            cat > dita-source/sample-topic.dita << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
        <topic id="sample">
          <title>Automotive Information</title>
          <body>
            <p>Welcome to our automotive documentation.</p>
            <section>
              <title>Automotive Theories</title>
              <p>Learn about automotive theories and concepts.</p>
            </section>
          </body>
        </topic>
        EOF
          fi
        fi

    - name: Build DITA (Basic)
      run: |
        # Find the main DITA map
        MAIN_DITAMAP=$(find dita-source -name "*.ditamap" -type f | head -1)
        if [ -z "$MAIN_DITAMAP" ]; then
          MAIN_DITAMAP="dita-source/sample.ditamap"
        fi
        
        echo "Using DITAMAP: $MAIN_DITAMAP"
        echo "DITA-OT version:"
        tools/dita-ot/bin/dita --version
        
        # Run a basic transformation without any customization first
        echo "Running basic HTML5 transformation..."
        tools/dita-ot/bin/dita --input=$MAIN_DITAMAP --format=html5 --output=build --verbose
        
        # Check the build result
        if [ $? -ne 0 ]; then
          echo "Basic DITA-OT build failed!"
          echo "Checking DITA-OT log files:"
          find tools/dita-ot -name "*.log" | while read logfile; do
            echo "==== Contents of $logfile ===="
            cat "$logfile"
          done
          exit 1
        fi
        
        echo "Basic DITA-OT build succeeded! Output:"
        ls -la build/

    - name: Add Simple CSS Styling
      if: success()
      run: |
        echo "Adding simple CSS styling..."
        mkdir -p css
        
        # Create a simple CSS file
        cat > css/automotive.css << 'EOF'
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background-color: #2c3e50;
            color: white;
            padding: 10px 20px;
            margin-bottom: 20px;
        }
        
        footer {
            background-color: #e74c3c;
            color: white;
            padding: 10px 20px;
            margin-top: 20px;
            text-align: center;
        }
        
        a {
            color: #2c3e50;
            text-decoration: none;
        }
        
        a:hover {
            text-decoration: underline;
        }
        
        .section {
            margin: 20px 0;
            padding: 15px;
            background-color: #f5f5f5;
            border-radius: 5px;
        }
        EOF
        
        # Copy CSS to the build directory
        cp css/automotive.css build/
        
        # Add a link to the CSS in the HTML files
        find build -name "*.html" | while read htmlfile; do
          sed -i 's/<\/head>/<link rel="stylesheet" type="text\/css" href="automotive.css"\/>\n<\/head>/' "$htmlfile"
        done

    - name: Deploy to GitHub Pages
      if: success()
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build
        branch: gh-pages