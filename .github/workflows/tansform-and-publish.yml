name: Transform DITA to HTML

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up DITA-OT
        run: |
          wget https://github.com/dita-ot/dita-ot/releases/download/4.0.2/dita-ot-4.0.2.zip
          unzip dita-ot-4.0.2.zip
          chmod +x dita-ot-4.0.2/bin/dita

      - name: Transform DITA to HTML
        run: |
          ./dita-ot-4.0.2/bin/dita --input=dita-source/automotive.ditamap --format=html5 --output=./site
          echo "DITA transformation complete"
          
          # List files for debugging
          echo "Generated files:"
          find ./site -type f | sort

      - name: Create Sidebar Navigation
        run: |
          # Create directories for assets
          mkdir -p ./site/css
          
          # Create CSS file
          cat > ./site/css/style.css << 'EOF'
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            display: flex;
            min-height: 100vh;
            width: 100%;
          }
          
          .sidebar {
            width: 250px;
            background-color: #f5f5f5;
            padding: 20px;
            min-height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            overflow-y: auto;
            border-right: 1px solid #ddd;
          }
          
          .main-content {
            margin-left: 250px;
            padding: 20px;
            width: calc(100% - 250px);
          }
          
          .sidebar h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
          }
          
          .sidebar ul {
            list-style-type: none;
            padding-left: 0;
            margin-bottom: 15px;
          }
          
          .sidebar ul ul {
            padding-left: 20px;
            margin-top: 5px;
          }
          
          .sidebar li {
            margin-bottom: 8px;
          }
          
          .sidebar a {
            color: #2c3e50;
            text-decoration: none;
            display: block;
            padding: 5px;
            border-radius: 4px;
            transition: background-color 0.2s;
          }
          
          .sidebar a:hover {
            background-color: #e0e0e0;
          }
          
          /* Improve readability in main content */
          .main-content h1, .main-content h2, .main-content h3 {
            margin-top: 1em;
            margin-bottom: 0.5em;
          }
          
          .main-content p {
            margin-bottom: 1em;
          }
          
          .main-content img {
            max-width: 100%;
            height: auto;
          }
          EOF
          
          # Create navigation HTML with direct content
          cat > ./site/navigation.html << 'EOF'
          <ul>
            <li><a href="automotive-theories.html">Automotive Theories</a>
              <ul>
                <li><a href="history-of-automobiles.html">History of Automobiles</a></li>
                <li><a href="types-of-vehicles.html">Types of Vehicles</a></li>
                <li><a href="automobile-fundamentals.html">Automobile Fundamentals</a></li>
                <li><a href="major-vehicle-components.html">Major Vehicle Components</a>
                  <ul>
                    <li><a href="electrical-systems.html">Electrical Systems</a></li>
                    <li><a href="engine-systems.html">Engine Systems</a></li>
                    <li><a href="electric-vehicles.html">Electric Vehicles</a></li>
                    <li><a href="braking-systems.html">Braking Systems</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li><a href="basic-maintenance.html">Basic Maintenance</a></li>
            <li><a href="vehicle-maintenance.html">Vehicle Maintenance</a></li>
            <li><a href="emergency-repairs.html">Emergency Repairs</a></li>
          </ul>
          EOF
          
          # Check if index.html exists
          if [ ! -f "./site/index.html" ]; then
            # Find main HTML file
            MAIN_HTML=$(find ./site -name "*.html" | grep -v "index.html" | head -1)
            if [ -n "$MAIN_HTML" ]; then
              cp "$MAIN_HTML" "./site/index.html"
            else
              # Create basic index
              echo '<html><head><meta http-equiv="refresh" content="0;url=automotive.html"></head></html>' > ./site/index.html
            fi
          fi
          
          # Process all HTML files
          find ./site -name "*.html" | while read -r file; do
            echo "Processing $file"
            
            # Extract the title and main content from the original file
            TITLE=$(grep -o '<title>[^<]*</title>' "$file" | sed 's/<title>\(.*\)<\/title>/\1/' || echo "Automotive Documentation")
            
            # Extract body content - safer approach that doesn't rely on complex regex
            TEMP_CONTENT=$(mktemp)
            # Get everything from body tag and save to temp file
            sed -n '/<body/,/<\/body>/p' "$file" > "$TEMP_CONTENT"
            
            # Create a new file with our structure
            NEW_FILE=$(mktemp)
            
            cat > "$NEW_FILE" << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>$TITLE</title>
            <link rel="stylesheet" href="css/style.css">
          </head>
          <body>
            <div class="sidebar">
              <h2>Navigation</h2>
              $(cat ./site/navigation.html)
            </div>
            <div class="main-content">
          EOF
            
            # Add the body content, skipping the body tags themselves
            sed '/<body/d; /<\/body>/d' "$TEMP_CONTENT" >> "$NEW_FILE"
            
            # Add closing tags
            cat >> "$NEW_FILE" << EOF
            </div>
          </body>
          </html>
          EOF
            
            # Replace original file with our processed version
            mv "$NEW_FILE" "$file"
            
            # Cleanup
            rm -f "$TEMP_CONTENT"
          done
          
          # Clean up
          rm -f ./site/navigation.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true