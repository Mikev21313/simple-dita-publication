name: Transform DITA to HTML

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up DITA-OT
        run: |
          wget https://github.com/dita-ot/dita-ot/releases/download/4.0.2/dita-ot-4.0.2.zip
          unzip dita-ot-4.0.2.zip
          chmod +x dita-ot-4.0.2/bin/dita

      - name: Transform DITA to HTML
        run: |
          ./dita-ot-4.0.2/bin/dita --input=dita-source/automotive.ditamap --format=html5 --output=./site
          echo "DITA transformation complete"
          
          # List files for debugging
          echo "Generated files:"
          find ./site -type f | sort

      - name: Create Sidebar Navigation
        run: |
          # Create directories for assets
          mkdir -p ./site/css
          
          # Create CSS file
          cat > ./site/css/style.css << 'EOF'
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            display: flex;
            min-height: 100vh;
            width: 100%;
          }
          
          .sidebar {
            width: 250px;
            background-color: #f5f5f5;
            padding: 20px;
            min-height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            overflow-y: auto;
            border-right: 1px solid #ddd;
          }
          
          .main-content {
            margin-left: 250px;
            padding: 20px;
            width: calc(100% - 250px);
          }
          
          .sidebar h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
          }
          
          .sidebar ul {
            list-style-type: none;
            padding-left: 0;
            margin-bottom: 15px;
          }
          
          .sidebar ul ul {
            padding-left: 20px;
            margin-top: 5px;
          }
          
          .sidebar li {
            margin-bottom: 8px;
          }
          
          .sidebar a {
            color: #2c3e50;
            text-decoration: none;
            display: block;
            padding: 5px;
            border-radius: 4px;
            transition: background-color 0.2s;
          }
          
          .sidebar a:hover {
            background-color: #e0e0e0;
          }
          
          .sidebar a.active {
            background-color: #dbeafe;
            font-weight: bold;
          }
          
          /* Improve readability in main content */
          .main-content h1, .main-content h2, .main-content h3 {
            margin-top: 1em;
            margin-bottom: 0.5em;
          }
          
          .main-content p {
            margin-bottom: 1em;
          }
          
          .main-content img {
            max-width: 100%;
            height: auto;
          }
          
          /* Hide redundant navigation in main content */
          .main-content > ul:first-of-type {
            display: none;
          }
          EOF
          
          # Simple script to highlight current page in navigation
          cat > ./site/js/highlight.js << 'EOF'
          document.addEventListener('DOMContentLoaded', function() {
            // Get current page filename
            var path = window.location.pathname;
            var page = path.split("/").pop();
            
            // If no page specified, assume index.html
            if(!page || page === "") {
              page = "index.html";
            }
            
            // Find matching link and add active class
            var navLinks = document.querySelectorAll('.sidebar a');
            navLinks.forEach(function(link) {
              if(link.getAttribute('href') === page) {
                link.classList.add('active');
              }
            });
          });
          EOF
          
          # Create navigation HTML
          cat > ./site/navigation.html << 'EOF'
          <ul>
            <li><a href="automotive-theories.html">Automotive Theories</a>
              <ul>
                <li><a href="history-of-automobiles.html">History of Automobiles</a></li>
                <li><a href="types-of-vehicles.html">Types of Vehicles</a></li>
                <li><a href="automobile-fundamentals.html">Automobile Fundamentals</a></li>
                <li><a href="major-vehicle-components.html">Major Vehicle Components</a>
                  <ul>
                    <li><a href="electrical-systems.html">Electrical Systems</a></li>
                    <li><a href="engine-systems.html">Engine Systems</a></li>
                    <li><a href="electric-vehicles.html">Electric Vehicles</a></li>
                    <li><a href="braking-systems.html">Braking Systems</a></li>
                  </ul>
                </li>
              </ul>
            </li>
            <li><a href="basic-maintenance.html">Basic Maintenance</a></li>
            <li><a href="vehicle-maintenance.html">Vehicle Maintenance</a></li>
            <li><a href="emergency-repairs.html">Emergency Repairs</a></li>
          </ul>
          EOF
          
          # Gather available HTML files
          AVAILABLE_FILES=$(find ./site -name "*.html" -not -path "./site/index.html" | sed 's|./site/||g')
          echo "Available HTML files: $AVAILABLE_FILES"
          
          # List of navigation targets (keep in sync with navigation.html)
          NAVIGATION_TARGETS="automotive-theories.html history-of-automobiles.html types-of-vehicles.html automobile-fundamentals.html major-vehicle-components.html electrical-systems.html engine-systems.html electric-vehicles.html braking-systems.html basic-maintenance.html vehicle-maintenance.html emergency-repairs.html"

          # Directory to store topic content files
          mkdir -p ./site/topics
          
          # Identify available content files and map them to navigation targets
          for TARGET in $NAVIGATION_TARGETS; do
            TARGET_BASE=$(echo "$TARGET" | sed 's/\.html$//')
            echo "Processing target: $TARGET"
            
            # Look for exact match
            if echo "$AVAILABLE_FILES" | grep -q "^$TARGET$"; then
              echo "Found exact match for $TARGET"
              cp "./site/$TARGET" "./site/topics/$TARGET"
            else
              # Look for close match based on filename
              MATCH=$(echo "$AVAILABLE_FILES" | grep -i "$TARGET_BASE" | head -1)
              
              if [ -n "$MATCH" ]; then
                echo "Found close match: $MATCH for $TARGET"
                cp "./site/$MATCH" "./site/topics/$TARGET"
              else
                # No match found, create placeholder content
                echo "No match found for $TARGET, creating placeholder"
                cat > "./site/topics/$TARGET" << EOT
<!DOCTYPE html>
<html>
<head>
  <title>${TARGET_BASE^}</title>
</head>
<body>
  <h1>${TARGET_BASE^}</h1>
  <p>Content for this topic is under development.</p>
</body>
</html>
EOT
              fi
            fi
          done
          
          # Create template file
          cat > ./site/template.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PAGE_TITLE</title>
  <link rel="stylesheet" href="css/style.css">
  <script src="js/highlight.js"></script>
</head>
<body>
  <div class="sidebar">
    <h2>Navigation</h2>
    NAVIGATION_CONTENT
  </div>
  <div class="main-content">
    MAIN_CONTENT
  </div>
</body>
</html>
EOF
          
          # Create index page if it doesn't exist
          if [ ! -f "./site/index.html" ]; then
            FIRST_TOPIC=$(echo "$NAVIGATION_TARGETS" | awk '{print $1}')
            cat > "./site/index.html" << EOF
<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="refresh" content="0;url=$FIRST_TOPIC">
  <title>Redirecting...</title>
</head>
<body>
  <p>Redirecting to <a href="$FIRST_TOPIC">$FIRST_TOPIC</a>...</p>
</body>
</html>
EOF
          fi
          
          # Process each navigation target to create final HTML files
          for TARGET in $NAVIGATION_TARGETS; do
            echo "Creating final HTML for $TARGET"
            
            # Read the page title and content
            if [ -f "./site/topics/$TARGET" ]; then
              PAGE_TITLE=$(grep -o '<title>[^<]*</title>' "./site/topics/$TARGET" | sed 's/<title>\(.*\)<\/title>/\1/' || echo "${TARGET%.*}")
              
              # Extract main content 
              TEMP_CONTENT=$(mktemp)
              sed -n '/<body/,/<\/body>/p' "./site/topics/$TARGET" > "$TEMP_CONTENT"
              MAIN_CONTENT=$(sed '/<body/d;/<\/body>/d' "$TEMP_CONTENT")
              
              # Clean up temp file
              rm -f "$TEMP_CONTENT"
            else
              PAGE_TITLE="${TARGET%.*}"
              MAIN_CONTENT="<h1>${TARGET%.*}</h1><p>Content coming soon.</p>"
            fi
            
            # Create final HTML file
            cat ./site/template.html | 
              sed "s|PAGE_TITLE|$PAGE_TITLE|g" | 
              sed "s|NAVIGATION_CONTENT|$(cat ./site/navigation.html)|g" | 
              sed "s|MAIN_CONTENT|$MAIN_CONTENT|g" > "./site/$TARGET"
          done
          
          # Clean up
          rm -f ./site/template.html ./site/navigation.html
          rm -rf ./site/topics
          
          # List final files
          echo "Final files:"
          find ./site -type f | sort

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true