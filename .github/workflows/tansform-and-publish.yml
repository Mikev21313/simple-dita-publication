name: Transform DITA to HTML

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up DITA-OT
        run: |
          wget https://github.com/dita-ot/dita-ot/releases/download/4.0.2/dita-ot-4.0.2.zip
          unzip dita-ot-4.0.2.zip
          chmod +x dita-ot-4.0.2/bin/dita

      - name: Transform DITA to HTML
        run: |
          ./dita-ot-4.0.2/bin/dita --input=dita-source/automotive.ditamap --format=html5 --output=./site
          echo "DITA transformation complete"
          
          # List files for debugging
          echo "Generated files:"
          find ./site -type f | sort

      - name: Add Side Navigation
        run: |
          # Create directories for assets
          mkdir -p ./site/css
          mkdir -p ./site/js
          
          # Create CSS file
          cat > ./site/css/style.css << 'EOF'
          body {
            display: flex;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            height: 100vh;
          }
          
          .sidebar {
            width: 250px;
            background-color: #f5f5f5;
            padding: 20px;
            height: 100vh;
            position: fixed;
            overflow-y: auto;
            border-right: 1px solid #ddd;
            box-sizing: border-box;
          }
          
          .main-content {
            margin-left: 250px;
            padding: 20px;
            flex: 1;
            overflow-y: auto;
            box-sizing: border-box;
          }
          
          .sidebar h2 {
            margin-top: 0;
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
          }
          
          .sidebar ul {
            list-style-type: none;
            padding: 0;
          }
          
          .sidebar li {
            margin-bottom: 8px;
          }
          
          .sidebar a {
            text-decoration: none;
            color: #2c3e50;
            display: block;
            padding: 5px;
          }
          
          .sidebar a:hover {
            background-color: #e0e0e0;
            border-radius: 4px;
          }
          
          /* Indent nested list items */
          .sidebar ul ul {
            padding-left: 20px;
          }
          
          /* Handle nested list items */
          .sidebar li li {
            margin-bottom: 5px;
          }
          EOF
          
          # Create JavaScript
          cat > ./site/js/script.js << 'EOF'
          document.addEventListener('DOMContentLoaded', function() {
            // Get the sidebar
            const sidebar = document.querySelector('.sidebar');
            
            // Clone navigation content
            const navigation = document.querySelector('.main-content ul');
            
            if (navigation) {
              // Create a copy of the navigation
              const sidebarNav = navigation.cloneNode(true);
              
              // Clear any existing content in the sidebar
              sidebar.innerHTML = '<h2>Navigation</h2>';
              
              // Add navigation to sidebar
              sidebar.appendChild(sidebarNav);
              
              // Remove navigation from main content
              navigation.parentNode.removeChild(navigation);
            }
            
            // Fix links
            const links = document.querySelectorAll('.sidebar a');
            links.forEach(link => {
              const href = link.getAttribute('href');
              if (href && !href.includes('.html') && !href.startsWith('http') && !href.startsWith('#')) {
                link.setAttribute('href', href + '.html');
              }
            });
          });
          EOF
          
          # Check if index.html exists
          if [ ! -f "./site/index.html" ]; then
            # Find main HTML file
            MAIN_HTML=$(find ./site -name "*.html" | head -1)
            if [ -n "$MAIN_HTML" ]; then
              cp "$MAIN_HTML" "./site/index.html"
            else
              # Create basic index
              echo '<html><head><meta http-equiv="refresh" content="0;url=automotive.html"></head></html>' > ./site/index.html
            fi
          fi
          
          # Process HTML files
          find ./site -name "*.html" | while read -r file; do
            # Add CSS and JS to HTML files
            sed -i 's|</head>|<link rel="stylesheet" href="css/style.css">\n<script src="js/script.js"></script>\n</head>|' "$file"
            
            # Insert the sidebar structure
            sed -i 's|<body|<body>\n<div class="sidebar"><h2>Navigation</h2><p>Navigation will appear here</p></div>\n<div class="main-content">|' "$file"
            sed -i 's|</body>|</div>\n</body>|' "$file"
          done

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true