name: DITA to SPA Transformation with Auto-Generated Navigation

on:
  push:
    branches:
      - main      
      - "**"      
      - "!gh-pages" 
    tags-ignore:
      - "**"      
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Extract branch information
      - name: Extract branch information
        id: branch
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          CURRENT_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "CURRENT_DATE=${CURRENT_DATE}" >> $GITHUB_ENV
          echo "Branch name: ${BRANCH_NAME}"

      # Step 3: Install requirements
      - name: Set up requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils xsltproc
          
          mkdir -p ./site/content ./site/js ./site/css ./site/images
          mkdir -p ./site/previews ./branch-metadata

      # Step 4: Create basic site structure
      - name: Create site structure
        run: |
          # Create a minimal site structure
          echo "<h1>Sample Content</h1><p>This is a sample page.</p>" > ./site/content/sample.html
          echo "const navigationConfig = [{\"id\":\"sample\",\"title\":\"Sample Content\",\"filename\":\"sample\"}];" > ./site/js/navigation-config.js
          echo "const contentIdMap = {\"sample\": { \"title\": \"Sample Content\", \"filename\": \"sample\" }};" > ./site/js/content-id-map.js
          
          # Create basic CSS
          cat > ./site/css/style.css << 'EOF'
          body { font-family: Arial, sans-serif; line-height: 1.6; padding: 20px; }
          h1 { margin-bottom: 15px; }
          EOF
          
          # Create index.html
          cat > ./site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Documentation</title>
            <link rel="stylesheet" href="css/style.css">
          </head>
          <body>
            <h1>Documentation</h1>
            <div id="content">
              <p>Welcome to the documentation.</p>
            </div>
            <script src="js/navigation-config.js"></script>
            <script src="js/content-id-map.js"></script>
          </body>
          </html>
          EOF

      # Step 5: Prepare Branch Previews Index (Main branch only)
      - name: Prepare Branch Previews Index
        if: github.ref == 'refs/heads/main'
        run: |
          # Create branch previews index
          cat > ./site/previews/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Branch Previews</title>
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
              h1 { border-bottom: 1px solid #eee; padding-bottom: 10px; }
              .branch-item { border: 1px solid #eee; margin-bottom: 10px; padding: 15px; border-radius: 4px; }
              .branch-name { font-weight: bold; }
              .branch-link { display: inline-block; margin-top: 10px; background: #0366d6; color: white; 
                           padding: 5px 10px; border-radius: 4px; text-decoration: none; }
              button { background: #28a745; color: white; border: none; padding: 8px 16px; 
                     border-radius: 4px; cursor: pointer; margin-bottom: 15px; }
            </style>
          </head>
          <body>
            <h1>Branch Previews</h1>
            <p>Documentation preview builds for active branches</p>
            <button id="refresh-button">Refresh</button>
            <div id="branches-container"></div>
            <a href="../">Back to main documentation</a>
            
            <script>
              document.getElementById('refresh-button').addEventListener('click', fetchBranches);
              
              async function fetchBranches() {
                try {
                  const response = await fetch('./branches.json?' + Date.now());
                  const data = await response.json();
                  
                  let html = '';
                  if (data.branches && data.branches.length > 0) {
                    data.branches.forEach(branch => {
                      html += `<div class="branch-item">
                        <span class="branch-name">${branch.name}</span>
                        <a href="../preview/branch-${branch.slug || branch.name}/" 
                           class="branch-link">View Preview</a>
                      </div>`;
                    });
                  } else {
                    html = '<p>No branch previews available</p>';
                  }
                  
                  document.getElementById('branches-container').innerHTML = html;
                } catch (error) {
                  document.getElementById('branches-container').innerHTML = 
                    '<p>Error loading branch data</p>';
                }
              }
              
              fetchBranches();
            </script>
          </body>
          </html>
          EOF
          
          # Create branches.json with test branch
          cat > ./site/previews/branches.json << EOF
          {
            "last_updated": "${CURRENT_DATE}",
            "branches": [
              {
                "name": "test-branch",
                "slug": "test-branch",
                "updated_at": "${CURRENT_DATE}"
              }
            ]
          }
          EOF
          
          # Create test branch metadata
          cat > ./branch-metadata/test-branch.json << EOF
          {
            "name": "test-branch",
            "slug": "test-branch",
            "updated_at": "${CURRENT_DATE}"
          }
          EOF

      # Step 6: Create branch metadata (non-main branches)
      - name: Create branch metadata
        if: github.ref != 'refs/heads/main'
        run: |
          cat > "./branch-metadata/${BRANCH_NAME}.json" << EOF
          {
            "name": "${GITHUB_REF#refs/heads/}",
            "slug": "${BRANCH_NAME}",
            "updated_at": "${CURRENT_DATE}"
          }
          EOF

      # Step 7: Deploy main site
      - name: Deploy main site
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      # Step 8: Deploy branch preview
      - name: Deploy branch preview
        if: github.ref != 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: preview/branch-${{ env.BRANCH_NAME }}

      # Step 9: Deploy branch metadata
      - name: Deploy branch metadata
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./branch-metadata
          destination_dir: branch-metadata
          keep_files: true