name: Transform DITA to HTML

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up DITA-OT
        run: |
          wget https://github.com/dita-ot/dita-ot/releases/download/4.0.2/dita-ot-4.0.2.zip
          unzip dita-ot-4.0.2.zip
          chmod +x dita-ot-4.0.2/bin/dita

      - name: Transform DITA to HTML
        run: |
          ./dita-ot-4.0.2/bin/dita --input=dita-source/automotive.ditamap --format=html5 --output=./site
          echo "DITA transformation complete"
          
          # List files for debugging
          echo "Generated files:"
          find ./site -type f | sort

      - name: Add Sidebar Navigation
        run: |
          # Create directories for assets
          mkdir -p ./site/css
          
          # Create CSS file for the layout
          cat > ./site/css/style.css << 'EOF'
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            display: flex;
            min-height: 100vh;
            width: 100%;
          }
          
          .sidebar {
            width: 250px;
            background-color: #f5f5f5;
            padding: 20px;
            height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            overflow-y: auto;
            border-right: 1px solid #ddd;
          }
          
          .main-content {
            margin-left: 250px;
            padding: 20px;
            width: calc(100% - 250px);
          }
          
          .sidebar h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
          }
          
          .sidebar ul {
            list-style-type: none;
            padding-left: 0;
            margin-bottom: 15px;
          }
          
          .sidebar ul ul {
            padding-left: 20px;
            margin-top: 5px;
          }
          
          .sidebar li {
            margin-bottom: 8px;
          }
          
          .sidebar a {
            color: #2c3e50;
            text-decoration: none;
            display: block;
            padding: 5px;
            border-radius: 4px;
            transition: background-color 0.2s;
          }
          
          .sidebar a:hover {
            background-color: #e0e0e0;
          }
          
          .sidebar a.active {
            background-color: #dbeafe;
            font-weight: bold;
          }
          
          /* Hide navigation in main content */
          .main-content > ul:first-of-type {
            display: none;
          }
          
          /* Preserve other styles from DITA output */
          .main-content h1, .main-content h2, .main-content h3 {
            margin-top: 1em;
            margin-bottom: 0.5em;
          }
          
          .main-content p {
            margin-bottom: 1em;
          }
          
          .main-content img {
            max-width: 100%;
            height: auto;
          }
          EOF
          
          # Create JS file to highlight active navigation item
          cat > ./site/highlight.js << 'EOF'
          document.addEventListener('DOMContentLoaded', function() {
            var currentPage = window.location.pathname.split('/').pop();
            if (!currentPage) currentPage = 'index.html';
            
            var navLinks = document.querySelectorAll('.sidebar a');
            navLinks.forEach(function(link) {
              if (link.getAttribute('href') === currentPage) {
                link.classList.add('active');
              }
            });
          });
          EOF
          
          # Create navigation HTML
          cat > ./site/nav.html << 'EOF'
          <div class="sidebar">
            <h2>Navigation</h2>
            <ul>
              <li><a href="automotive-theories.html">Automotive Theories</a>
                <ul>
                  <li><a href="history-of-automobiles.html">History of Automobiles</a></li>
                  <li><a href="types-of-vehicles.html">Types of Vehicles</a></li>
                  <li><a href="automobile-fundamentals.html">Automobile Fundamentals</a></li>
                  <li><a href="major-vehicle-components.html">Major Vehicle Components</a>
                    <ul>
                      <li><a href="electrical-systems.html">Electrical Systems</a></li>
                      <li><a href="engine-systems.html">Engine Systems</a></li>
                      <li><a href="electric-vehicles.html">Electric Vehicles</a></li>
                      <li><a href="braking-systems.html">Braking Systems</a></li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li><a href="basic-maintenance.html">Basic Maintenance</a></li>
              <li><a href="vehicle-maintenance.html">Vehicle Maintenance</a></li>
              <li><a href="emergency-repairs.html">Emergency Repairs</a></li>
            </ul>
          </div>
          EOF
          
          # Get files that need processing
          HTML_FILES=$(find ./site -name "*.html")
          
          # Define the navigation targets (files to create if missing)
          NAV_TARGETS="automotive-theories.html history-of-automobiles.html types-of-vehicles.html automobile-fundamentals.html major-vehicle-components.html electrical-systems.html engine-systems.html electric-vehicles.html braking-systems.html basic-maintenance.html vehicle-maintenance.html emergency-repairs.html"
          
          # Process HTML files to add navigation
          for FILE in $HTML_FILES; do
            FILENAME=$(basename "$FILE")
            echo "Processing $FILENAME"
            
            # Create a temp file
            TEMP_FILE=$(mktemp)
            
            # Extract everything before <body> tag
            sed -n '1,/<body/p' "$FILE" | sed '/<body/d' > "$TEMP_FILE"
            
            # Add stylesheet link and script
            sed -i '/<\/head>/i \    <link rel="stylesheet" href="css/style.css">' "$TEMP_FILE"
            sed -i '/<\/head>/i \    <script src="highlight.js"></script>' "$TEMP_FILE"
            
            # Start body tag and add navigation
            echo '<body>' >> "$TEMP_FILE"
            cat ./site/nav.html >> "$TEMP_FILE"
            
            # Add main-content wrapper
            echo '<div class="main-content">' >> "$TEMP_FILE"
            
            # Extract and add existing content (keeping original structure)
            sed -n '/<body/,/<\/body>/p' "$FILE" | sed '/<body/d;/<\/body>/d' >> "$TEMP_FILE"
            
            # Close main content and body
            echo '</div>' >> "$TEMP_FILE"
            echo '</body>' >> "$TEMP_FILE"
            
            # Add closing html tag
            echo '</html>' >> "$TEMP_FILE"
            
            # Replace original file
            mv "$TEMP_FILE" "$FILE"
          done
          
          # Create missing files from navigation if needed
          for TARGET in $NAV_TARGETS; do
            if [ ! -f "./site/$TARGET" ]; then
              echo "Creating missing file: $TARGET"
              
              # Generate a basic page with the same structure
              cat > "./site/$TARGET" << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>${TARGET%.*}</title>
            <link rel="stylesheet" href="css/style.css">
            <script src="highlight.js"></script>
          </head>
          <body>
          $(cat ./site/nav.html)
          <div class="main-content">
            <h1>${TARGET%.*}</h1>
            <p>Content for this section is currently under development.</p>
          </div>
          </body>
          </html>
          EOF
            fi
          done
          
          # Create index.html if missing
          if [ ! -f "./site/index.html" ]; then
            echo "Creating index.html"
            
            # Find a suitable file to use as index
            FIRST_FILE=$(find ./site -name "*.html" | head -1)
            
            if [ -n "$FIRST_FILE" ]; then
              cp "$FIRST_FILE" "./site/index.html"
            else
              # Create a basic index page
              cat > "./site/index.html" << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Automotive Documentation</title>
            <link rel="stylesheet" href="css/style.css">
            <script src="highlight.js"></script>
          </head>
          <body>
          $(cat ./site/nav.html)
          <div class="main-content">
            <h1>Automotive Documentation</h1>
            <p>Welcome to the automotive documentation. Please select a topic from the navigation menu.</p>
          </div>
          </body>
          </html>
          EOF
            fi
          fi
          
          # Clean up
          rm -f ./site/nav.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true