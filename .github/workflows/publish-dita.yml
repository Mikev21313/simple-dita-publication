name: Publish DITA to GitHub Pages
on:
  push:
    branches: [ main ]
    paths:
      - 'dita-source/**'  # Only trigger on changes to DITA content
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up Java
        uses: actions/setup-java@v3  # Updated to v3
        with:
          java-version: '17'  # Updated to more recent Java version
          distribution: 'temurin'  # More reliable distribution
          
      - name: Setup DITA-OT
        uses: dita-ot/setup-dita-ot@v2  # Use official DITA-OT action
        with:
          version: '4.1.2'  # Use latest stable version
          
      - name: Verify DITA map exists
        run: |
          if [ ! -f "dita-source/maps/simple-guide.ditamap" ]; then
            echo "Error: DITA map not found at specified location"
            exit 1
          fi
          
      # Transform DITA to HTML
      - name: Transform DITA to HTML
        run: |
          dita --input=dita-source/maps/simple-guide.ditamap \
          --format=html5 \
          --output=docs \
          --args.xhtml.toc=toc \
          --nav-toc=full \
          --args.outext=.html \
          --args.copycss=yes \
          --args.css=css/style.css \
          --verbose
          
      # Create and add CSS file for styling
      - name: Add CSS file
        run: |
          mkdir -p docs/css
          cat > docs/css/style.css << 'EOF'
          body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.5;
          }
          a { color: #0066cc; }
          .navtitle { font-weight: bold; }
          .toc { 
            background-color: #f8f8f8;
            padding: 15px;
            border-radius: 5px;
          }
          .topictitle1 { font-size: 1.8em; }
          .topictitle2 { font-size: 1.5em; }
          
          /* Make sure nested topics are clearly visible */
          .nested1 { margin-left: 20px; }
          .nested2 { margin-left: 40px; }
          .nested3 { margin-left: 60px; }
          EOF
          
          # Check if CSS is already linked, if not add it
          for file in $(find docs -name "*.html" -type f); do
            if ! grep -q "css/style.css" "$file"; then
              sed -i 's/<\/head>/<link rel="stylesheet" href="css\/style.css"><\/head>/' "$file"
            fi
          done
          
      # Check for any broken links in the output
      - name: Check for broken links
        run: |
          echo "Checking for broken internal links in HTML output..."
          grep -r "href=\".*\"" docs/ | grep -v "http" | grep -v "https" | sed 's/.*href=\"\([^\"]*\)\".*/\1/' | sort | uniq > links.txt
          
          BROKEN_LINKS=0
          while read -r link; do
            # Skip empty links or anchors
            if [[ "$link" == "" || "$link" == "#"* || "$link" == "mailto:"* ]]; then
              continue
            fi
            
            # Remove anchor part
            LINK_PATH=${link%%#*}
            
            # Find base directory
            BASE_DIR=$(dirname "$file")
            
            # Check if file exists
            if [[ "$LINK_PATH" == "/"* ]]; then
              # Absolute path inside docs
              if [[ ! -f "docs$LINK_PATH" && ! -d "docs$LINK_PATH" ]]; then
                echo "Broken link: $link in docs directory"
                BROKEN_LINKS=$((BROKEN_LINKS + 1))
              fi
            else
              # Relative path
              if [[ ! -f "docs/$LINK_PATH" && ! -d "docs/$LINK_PATH" ]]; then
                echo "Broken link: $link in docs directory"
                BROKEN_LINKS=$((BROKEN_LINKS + 1))
              fi
            fi
          done < links.txt
          
          if [[ $BROKEN_LINKS -gt 0 ]]; then
            echo "Warning: $BROKEN_LINKS broken links found in the output"
          else
            echo "No broken links found"
          fi
          
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
          clean: true