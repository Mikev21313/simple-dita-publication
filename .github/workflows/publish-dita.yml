# Create index file if not present
- name: Create index file if not present
  run: |
    # Get the TOC HTML and descriptions HTML
    toc_html=$(cat toc_html.txt)
    descriptions_html=$(cat descriptions_html.txt)
    
    if [ ! -f "docs/index.html" ]; then
      echo "Creating index.html with TOC..."
      
      cat > docs/index.html << 'EOL'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DITA Documentation</title>
    <link rel="stylesheet" type="text/css" href="css/custom.css">
</head>
<body>
    <div class="header">
      <h1>DITA Documentation</h1>
    </div>
    
    <div class="toc-container">
      ${toc_html}
    </div>
    
    <div class="content">
      <h1>Welcome to the DITA Documentation</h1>
      
      <p>This documentation is generated from DITA source files using DITA-OT and published to GitHub Pages.</p>
      
      <p>Please select a topic from the table of contents to learn more:</p>
      
      ${descriptions_html}
      
      <p>DITA (Darwin Information Typing Architecture) is an XML-based format for authoring and publishing technical content.</p>
    </div>
    
    <div class="footer">
      <p>Generated with DITA-OT | Published with GitHub Pages</p>
    </div>
    <script>
      // Simple script to highlight the current page in the TOC
      document.addEventListener('DOMContentLoaded', function() {
        // Get the current page URL
        var currentPageUrl = window.location.pathname.split('/').pop();
        if (!currentPageUrl) currentPageUrl = 'index.html';
        
        // Find the matching link in the TOC and add 'active' class to its parent li
        var tocLinks = document.querySelectorAll('.toc a');
        tocLinks.forEach(function(link) {
          if (link.getAttribute('href') === currentPageUrl) {
            link.parentElement.classList.add('active');
          }
        });
      });
    </script>
</body>
</html>
EOL
    fi